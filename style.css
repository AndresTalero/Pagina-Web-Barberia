body {
	font-family: 'Montserrat', sans-serif;
}

/*El body usa el estilo de CSS de la página de google para la letra Montserrat*/

header {
	background-color: #BBBBBB;
	padding: 20px 0;
}

.caja {
	width: 940px;
	position: relative;
	margin: 0 auto;
}

nav {
	position: absolute;
	top: 110px;
	right: 0;	
}

nav li {
	display: inline;
	margin: 0 0 0 15px;
}

nav a {
	text-transform: uppercase;
	color: #000000;
	font-weight: bold;
	font-size: 22px;
	text-decoration: none;
}

nav a:hover {
	color: #c78c19;
	text-decoration: underline;
}

.productos {
	width: 940px;
	margin: 0 auto;
	padding: 50px;
}

.productos li{
	display: inline-block;
	text-align: center;
	width: 30%;
	vertical-align: top;	
	margin: 0 1.5%;
	padding: 30px 20px;
	box-sizing: border-box;
	/*border-color: #000000;
	border-width: 2px;
	border-style: solid;
	Estos se pueden reemplazar por uno sólo: */
	border:2px solid #000000;
	border-radius: 10px;
}

/*hover: cuando el usuario pasa el cursor sobre el elemento.
  active: cuando un elemento está siendo activado por el usuario.
*/

.productos li:hover {
	border-color: #c78c19;		
}

.productos li:active {
	border-color: #088c19;
}

.productos h2{
	font-size: 30px;
	font-weight: bold;
}

.productos li:hover h2 {
	font-size: 33px;
}

.producto-descripcion {
	font-size: 18px;
}

.producto-precio {
	font-size: 20px;
	font-weight: bold;
	margin-top: 10px;
}

footer {
	text-align: center;
	background: url(imagenes/bg.jpg);
	padding: 40px;
}

.copyright {
	color: #FFFFFF;
	font-size: 13px;
	margin: 20px;
}

/*Con CSS, podemos poner una imagen de fondo en un elemento.
  Cuando ponemos una imagen de fondo en un elemento, el CSS,
  por defecto copia y pega la imagen varias veces hasta ocupar
  el espacio del elemento.
        
  La tabla Unicode tiene caracteres especiales y están disponibles
  para ser usados como un complemento a nuestro texto.
  En el HTML usamos: &copy para generar la arroba @
  Estos caracteres los podemos encontrar en internet en la página
  unicode-table.com
*/

/*940px porque un monitor padrón tiene 1270px y es buena práctica
usar 940px para centralizar en desarrollo web
*/

form {
	margin: 40px 0;
}

/*Por defecto input y label tiene el display inline, osea que ocupan
sólo su ancho, block hace que ocupe todo el ancho de la página, o en
este caso los 940px que se le definió al main.*/

form label, form legend {
	display: block;
	font-size: 20px;
	margin: 0 0 10px;
}

.input-padron {
	display: block ;
	margin: 0 0 20px;
	padding: 10px 25px;
	width: 50%;
}

.checkbox {
	margin: 20px 0;
}

/*p {
	color: red;
}

form p {
	color: blue;
}

.test {
	color: yellow;
}

p.test {
	color: orange;
}

#test {
	color: pink;
}

Las gerarquias en css son de menor a mayor valor:
- etiqueta
- class
- id
- inline (estilo en el html) */

.enviar {
	width: 40%;
	padding: 15px 0;
	font-size: 18px;
	font-weight: bold;
	color: white;
	background: orange;
	border: none;
	border-radius: 5px;
  /*transition: 1s background;*/
  /*transición para todas las características: */
  transition: 1s all;
	cursor: pointer;
}

.enviar:hover {
	background: darkorange;
 /*transform: scale(1.2);*/
 /*Con scale(1.2) le decimos qu aumente un 20% la imágen*/
 /*Rota 70 grados:	*/
 /*transform: rotate(70deg);*/
 /*Al usar transform: rotate(70deg) CSS no toma en 
   cuenta transform: scale(1.2), CSS toma la última,
   para solucionarlo las dejamos en la misma línea:	*/
 /*transform: scale(1.2) rotate(70deg);*/
  transform: scale(1.2);
}

table {
	margin: 40px 40px;
}

thead {
	background: #555555;
	color: white;
	font-weight: bold;
}

td, th {
	border: 1px solid #000000;
	padding: 8px 15px;
}

/*Aquí inicia el CSS para nuestra home*/

.banner {
	width: 100%;
}

/*
Selectores avanzados CSS

Seleccionando elementos específicos, en este caso 
en el párrafo de ejemplo del html y los demás párrafos:

main > p {
	background: red;
}

img + p {
	background: yellow;
}

img ~ p {
	background: green;
}

.principal p:not(#mision) {
	background: orange;

	

	Selector > , para acceder a los hijos de determinado elemento.
	Por ejemplo, para acceder todos los p dentro del main:
	main > p { }

	Selector +, para acceder al primer hermano de determinado elemento.
	Por ejemplo, para acceder el primer p después de una img:
	img + p {	}

	Selector ~, para acceder a todos los hermanos de determinado elemento.
	Por ejemplo, para acceder todos los p después de una img:
	img ~ p { }

	Selector not, para acceder a los elementos, excepto algunos.
	Por ejemplo, para acceder a todos los p dentro de main excepto
	el p que tiene id missao:
	main p:not(#missao) { }

}*/



.principal {
	padding: 3em 0;
	background: #FEFEFE;
	width: 940px;
	margin: 0 auto;
}

.titulo-principal {
	 text-align: center;
	 font-size: 2em;
	 /* 2em es 2 veces el tamaño por defecto que tiene
	    el navegador, en este cado es de 15 px, varía
	    según el navegador.
	 */
	 margin: 0 0 1em;
	 clear: left;
   /*color: #rgba(0,0,0,0.3); color negro con opacidad de 30%
     Todos los elementos y todos los colores pueden tener una capa de opacidad.*/
	 
	 /* Limpia el float de la clase utensilios con la propiedad clear
	    del CSS y cualquier configuración a la izquierda del título 
	    queda limpia, en este caso se hace para que la 
	    imagen utensilios no afecte los títulos.*/
	 
	 text-shadow: 2px 2px 10px red;
	   /*sombra en el texto -> pos x, pos y, blur(difuminación), color*/
}

/*
Pseudoelementos:

.titulo-principal:first-letter {
	font-weight: bold;
}

.titulo-principal:before {
	content: "[";
}

.titulo-principal:after {
	content: "]";
}

p:first-line {
	font-style: italic;
}*/

.principal p {
	margin: 0 0 1em;
}

.principal strong {
	font-weight: bold;
}

.principal em {
	font-style: italic;
}

.utensilios {
	width: 120px;

/*width: calc(40% - (26px * 4));*/

/*En el width anterior podemos usar la función calc() para adecuar el 
  tamaño de la imagen y se adapte a diferentes dispositivos y tamaños
  de los mismos, en el ejemplo usa el 40% de la pantalla y le resta lo 
  que necesitemos.

  Otro ejemplo:

  Cómo usar medidas proporcionales para dejar un elemento 100% de 
  ancho con el equivalente a un tercio del elemento padre, menos 10px:

  width: calc( (100% / 3) - 10px )
*/

	float: left;
	/*El margen en sentido horario superior, 
	  derecha, inferior e izquierda: */
	margin: 0 20px 20px 0;
}

.mapa {
	padding: 3em 0;	
	background: linear-gradient(#FEFEFE, #888888);
 /*Podemos colocar más colores y una orientación ya que 
 por defecto es horizontal:
 background: linear-gradient(45deg, orange, blue, red, black);
 También podemos dar más cantidad de un color que de otro:
 background: linear-gradient(45deg, orange 50%, blue, red, black);
 También podemos cambiar a forma de elipse:
 background: radial-gradient(orange 30%, blue, red, black);	*/
}

.mapa p {
	margin: 0 0 2em;
	text-align: center;
}

.mapa-contenido {
	width: 940px;
	margin: 0 auto;
}

.diferenciales {
	padding: 3em 0;
	background: #888888;
/*box-shadow: inset 0 0 30px red;
  coloca una sombra interna hacia adentro de todo
  el bloque diferenciales */
}

.contenido-diferenciales {
	width: 640px;
	margin: 0 auto;
}

.lista-diferenciales {
	width: 40%;
	display: inline-block;
	vertical-align: top;
}

.items {
	line-height: 1.5;
/* Configuramos el espacio entre líneas, en line-height (línea de altura) 
   colocamos 1.5, que es vez y media del tamaño por defecto, es 
   parecio a la medida: em */
}

/*En gogogle buscamos https://unicode-table.com/es/
  copiamos la estrella y la pegamos: */

.items:before {
	content: "★";
}

.items:first-child {
	font-weight: bold;
}

.imagen-diferenciales {
	width: 60%;	
	transition: 400ms;

	/*transición de 400 milisegundos para la opacidad
	  al colocar el mouse sobre la imagen la cuál la 
	  colocamos de 0.3, 0 no se ve la imagen, es como
	  cuando no se permite pasar la luz por un vidrio,
	  Todos los elementos y todos los colores pueden 
	  tener una capa de opacidad.
	*/

	box-shadow: 10px 10px 30px 15px #000000;

	/*box-shadow: 10px 10px 30px 15px #000000, -10px -10px yellow, -15ps 10px rgba(50,50,50,0.5);	
	  - box-shadow: pos x, pos y, blur(difuminación), spread (tamaño de alcance o extendido), color;
	  - podemos colocar 3 sombras
	  - existen varias páginas donde podemos conocer y probar efectos CSS en google buscamos:
	  	box shadow css generator mozilla
	*/
}



.imagen-diferenciales:hover {
	opacity: 0.3;
}

/*.lista-diferenciales y .imagen-diferenciales ocupan
el 40% y 60% respectivamente para el 100% de los 640px
de .contenido-diferenciales*/

.video {
	width: 560px;
	margin: 1em auto;
}


/*Un media query nos ayuda a configurar las páginas html 
  para distintos tipos y tamaños de pantallas en diferentes
  dispositivos, ya que el código CSS anterior sólo es para 
  monitores de entre 940px y 1200px que es el estandar de 
  los monitores:
*/

/*Si se encuentra una pantalla de hasta 480px como límite 
  máximo aplica unos estilos:  */

@media screen and (max-width:480px) {

		h1 {
			text-align: center;
		}

		nav {
			position: static;
		}

		.caja, .principal, .mapa-contenido, .contenido-diferenciales, .video {
			width: auto;
		}

		.lista-diferenciales, .imagen-diferenciales {
			width: 100%;
		}
}